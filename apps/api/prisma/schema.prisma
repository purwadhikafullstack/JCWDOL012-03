// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int           @id @default(autoincrement())
  email      String        @unique
  username   String
  password   String
  name       String
  refCode    String?
  phone      String?
  avatar     String?
  addresses  Address[]
  carts      Cart[]
  orders     Order[]
  voucher    Voucher[]
  referral   ReferralCode?
  role       String        @default("user")
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
  StoreAdmin StoreAdmin?
}

model Address {
  id        Int        @id @default(autoincrement())
  userId    Int
  user      User       @relation(fields: [userId], references: [id])
  street    String
  city      String
  province  String
  zipCode   String
  notes     String?
  location  Location[]
  isPrimary Boolean
}

model Store {
  id       Int          @id @default(autoincrement())
  name     String
  location Location[]
  admins   StoreAdmin[]
  products Product[]
  order    Order[]
}

model Location {
  id        Int     @id @default(autoincrement())
  latitude  Float
  longitude Float
  addressId Int
  address   Address @relation(fields: [addressId], references: [id])
  storeId   Int     @unique
  store     Store   @relation(fields: [storeId], references: [id])
}

model StoreAdmin {
  id      Int   @id @default(autoincrement())
  userId  Int   @unique
  storeId Int
  user    User  @relation(fields: [userId], references: [id])
  store   Store @relation(fields: [storeId], references: [id])
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  image       Image[]
  description String
  price       Float
  stock       Int
  storeId     Int
  store       Store       @relation(fields: [storeId], references: [id])
  categories  Category[]
  discount    Discount[]
  cart        Cart[]
  orderItem   OrderItem[]
  status      Boolean
}

model Image {
  id        Int      @id @default(autoincrement())
  url       String
  Product   Product? @relation(fields: [productId], references: [id])
  productId Int?
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String
  products Product[]
}

model Cart {
  id        Int     @id @default(autoincrement())
  userId    Int
  productId Int
  quantity  Int
  user      User    @relation(fields: [userId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model Order {
  id           Int         @id @default(autoincrement())
  userId       Int
  storeId      Int
  totalAmount  Float
  status       String
  paymentProof String?
  user         User        @relation(fields: [userId], references: [id])
  store        Store       @relation(fields: [storeId], references: [id])
  orderItems   OrderItem[]
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  price     Float
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model ReferralCode {
  id     Int    @id @default(autoincrement())
  code   String @unique
  userId Int    @unique
  user   User   @relation(fields: [userId], references: [id])
}

model Discount {
  id            Int      @id @default(autoincrement())
  productId     Int
  product       Product  @relation(fields: [productId], references: [id])
  discountType  String // Contoh: 'percentage', 'fixed'
  discountValue Float
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Voucher {
  id            Int      @id @default(autoincrement())
  userId        Int
  user          User     @relation(fields: [userId], references: [id])
  code          String   @unique
  discountType  String // Contoh: 'percentage', 'fixed'
  discountValue Float
  expiredDate   DateTime
  usageType     String // Contoh: 'product', 'totalPurchase', 'shipping'
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}
